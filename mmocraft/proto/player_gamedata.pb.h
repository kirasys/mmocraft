// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_gamedata.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_player_5fgamedata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_player_5fgamedata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_player_5fgamedata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_player_5fgamedata_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_player_5fgamedata_2eproto;
namespace game {
class PlayerGamedata;
struct PlayerGamedataDefaultTypeInternal;
extern PlayerGamedataDefaultTypeInternal _PlayerGamedata_default_instance_;
}  // namespace game
PROTOBUF_NAMESPACE_OPEN
template<> ::game::PlayerGamedata* Arena::CreateMaybeMessage<::game::PlayerGamedata>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace game {

// ===================================================================

class PlayerGamedata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.PlayerGamedata) */ {
 public:
  inline PlayerGamedata() : PlayerGamedata(nullptr) {}
  ~PlayerGamedata() override;
  explicit PROTOBUF_CONSTEXPR PlayerGamedata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PlayerGamedata(const PlayerGamedata& from);
  PlayerGamedata(PlayerGamedata&& from) noexcept
    : PlayerGamedata() {
    *this = ::std::move(from);
  }

  inline PlayerGamedata& operator=(const PlayerGamedata& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerGamedata& operator=(PlayerGamedata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerGamedata& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerGamedata* internal_default_instance() {
    return reinterpret_cast<const PlayerGamedata*>(
               &_PlayerGamedata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PlayerGamedata& a, PlayerGamedata& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerGamedata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerGamedata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerGamedata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerGamedata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PlayerGamedata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PlayerGamedata& from) {
    PlayerGamedata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerGamedata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.PlayerGamedata";
  }
  protected:
  explicit PlayerGamedata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatestPosFieldNumber = 1,
    kSpawnPosFieldNumber = 2,
    kLevelFieldNumber = 3,
    kExpFieldNumber = 4,
  };
  // uint64 latest_pos = 1;
  void clear_latest_pos();
  uint64_t latest_pos() const;
  void set_latest_pos(uint64_t value);
  private:
  uint64_t _internal_latest_pos() const;
  void _internal_set_latest_pos(uint64_t value);
  public:

  // uint64 spawn_pos = 2;
  void clear_spawn_pos();
  uint64_t spawn_pos() const;
  void set_spawn_pos(uint64_t value);
  private:
  uint64_t _internal_spawn_pos() const;
  void _internal_set_spawn_pos(uint64_t value);
  public:

  // uint32 level = 3;
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // uint32 exp = 4;
  void clear_exp();
  uint32_t exp() const;
  void set_exp(uint32_t value);
  private:
  uint32_t _internal_exp() const;
  void _internal_set_exp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:game.PlayerGamedata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t latest_pos_;
    uint64_t spawn_pos_;
    uint32_t level_;
    uint32_t exp_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_player_5fgamedata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerGamedata

// uint64 latest_pos = 1;
inline void PlayerGamedata::clear_latest_pos() {
  _impl_.latest_pos_ = uint64_t{0u};
}
inline uint64_t PlayerGamedata::_internal_latest_pos() const {
  return _impl_.latest_pos_;
}
inline uint64_t PlayerGamedata::latest_pos() const {
  // @@protoc_insertion_point(field_get:game.PlayerGamedata.latest_pos)
  return _internal_latest_pos();
}
inline void PlayerGamedata::_internal_set_latest_pos(uint64_t value) {
  
  _impl_.latest_pos_ = value;
}
inline void PlayerGamedata::set_latest_pos(uint64_t value) {
  _internal_set_latest_pos(value);
  // @@protoc_insertion_point(field_set:game.PlayerGamedata.latest_pos)
}

// uint64 spawn_pos = 2;
inline void PlayerGamedata::clear_spawn_pos() {
  _impl_.spawn_pos_ = uint64_t{0u};
}
inline uint64_t PlayerGamedata::_internal_spawn_pos() const {
  return _impl_.spawn_pos_;
}
inline uint64_t PlayerGamedata::spawn_pos() const {
  // @@protoc_insertion_point(field_get:game.PlayerGamedata.spawn_pos)
  return _internal_spawn_pos();
}
inline void PlayerGamedata::_internal_set_spawn_pos(uint64_t value) {
  
  _impl_.spawn_pos_ = value;
}
inline void PlayerGamedata::set_spawn_pos(uint64_t value) {
  _internal_set_spawn_pos(value);
  // @@protoc_insertion_point(field_set:game.PlayerGamedata.spawn_pos)
}

// uint32 level = 3;
inline void PlayerGamedata::clear_level() {
  _impl_.level_ = 0u;
}
inline uint32_t PlayerGamedata::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t PlayerGamedata::level() const {
  // @@protoc_insertion_point(field_get:game.PlayerGamedata.level)
  return _internal_level();
}
inline void PlayerGamedata::_internal_set_level(uint32_t value) {
  
  _impl_.level_ = value;
}
inline void PlayerGamedata::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:game.PlayerGamedata.level)
}

// uint32 exp = 4;
inline void PlayerGamedata::clear_exp() {
  _impl_.exp_ = 0u;
}
inline uint32_t PlayerGamedata::_internal_exp() const {
  return _impl_.exp_;
}
inline uint32_t PlayerGamedata::exp() const {
  // @@protoc_insertion_point(field_get:game.PlayerGamedata.exp)
  return _internal_exp();
}
inline void PlayerGamedata::_internal_set_exp(uint32_t value) {
  
  _impl_.exp_ = value;
}
inline void PlayerGamedata::set_exp(uint32_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:game.PlayerGamedata.exp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace game

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_player_5fgamedata_2eproto
